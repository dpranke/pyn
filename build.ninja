rule pylint 
  command = pylint --rcfile pylintrc $in > $out.tmp; if [ -s $out.tmp ]; then cat $out.tmp 1>&2 ; rm -f $out.tmp; false; else rm $out.tmp; fi
  description = lint $in

rule pytest
  command = python $in 2> $out.tmp; if grep FAILED $out.tmp; then cat $out.tmp 1>&2 ; rm $out.tmp; false; else rm $out.tmp; fi
  description = pytest $in

rule pymeta
  command = python pymeta_helper.py $in
  description = generating $out

build lint : phony $
  .pylint.pymeta_helper.py $
  .pylint.pyn.py $
  .pylint.ninja_parser.py $
  .pylint.ninja_parser_test.py

build ninja_parser.py : pymeta ninja.pym

build test : phony .pytest.ninja_parser_test.py

build .pylint.ninja_parser.py : pylint ninja_parser.py
build .pylint.ninja_parser_test.py : pylint ninja_parser_test.py | ninja_parser.py
build .pylint.pyn.py : pylint pyn.py
build .pylint.pymeta_helper.py : pylint pymeta_helper.py
build .pytest.ninja_parser_test.py : pytest ninja_parser_test.py | ninja_parser.py

default ninja_parser.py
