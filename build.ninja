rule pycov
    command = $
      coverage erase && $
      for i in $in ; $
      do $
        coverage run --append $$i > /dev/null 2>& 1 ; $
      done && $
      coverage --report --omit 'pymeta/*,/pymeta_generated*'
    description = generating python coverage

rule pylint 
  command = $
    pylint --rcfile pylintrc $in > $out.tmp; $
    if [ -s $out.tmp ]; $
    then $
        cat $out.tmp 1>&2 ; $
        rm -f $out.tmp; $
        false ; $
    else $
        rm -f $out.tmp ; $
    fi
  description = pylint $in

rule pytest
  command = $
    python $in 2> $out.tmp; $
    if grep FAILED $out.tmp; $
    then $
      cat $out.tmp 1>&2 ; $
      rm $out.tmp; $
      false; $
    fi
  description = python $in

rule pymeta
  command = python pymeta_helper.py $in

build all : phony ninja_parser.py

build lint : phony $
  .pylint.analyzer.py $
  .pylint.analyzer_test.py $
  .pylint.builder.py $
  .pylint.builder_test.py $
  .pylint.common.py $
  .pylint.common_test.py $
  .pylint.host.py $
  .pylint.main.py $
  .pylint.main_test.py $
  .pylint.ninja_parser_test.py

build test : phony $
  .pytest.analyzer_test.py $
  .pytest.builder_test.py $
  .pytest.common_test.py $
  .pytest.main_test.py $
  .pytest.ninja_parser_test.py

build coverage : phony .pycoverage_report

build .pycoverage_report : pycov analyzer_test.py $
                                 builder_test.py $
                                 common_test.py $
                                 main_test.py $
                                 ninja_parser_test.py

build .pylint.analyzer.py : pylint analyzer.py
build .pylint.analyzer_test.py : pylint analyzer_test.py
build .pylint.builder.py : pylint builder.py
build .pylint.builder_test.py : pylint builder_test.py
build .pylint.common.py : pylint common.py
build .pylint.common_test.py : pylint common_test.py
build .pylint.host.py : pylint host.py
build .pylint.main.py : pylint main.py
build .pylint.main_test.py : pylint main_test.py
build .pylint.ninja_parser_test.py : pylint ninja_parser_test.py

build .pytest.analyzer_test.py : pytest analyzer_test.py
build .pytest.builder_test.py : pytest builder_test.py
build .pytest.common_test.py : pytest common_test.py
build .pytest.main_test.py : pytest main_test.py
build .pytest.ninja_parser_test.py : pytest ninja_parser_test.py

default all
